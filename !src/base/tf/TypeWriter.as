package base.tf {	import flash.display.Sprite;	import flash.text.TextField;	import flash.events.TimerEvent;	import flash.utils.Timer;	import flash.events.Event;		public class TypeWriter extends Sprite {				private var tfTarget: TextField;		private var arrChar: Array;		private var numCharAdded: Number = 0;		private var stepCharAdded: Number = 1;		private var isFramesSeconds: uint;		public var timerAppendText: Timer;		private var onStopAppendText: Function;		private var ready: Boolean = true;				public function TypeWriter(): void { }				public function writeIt(strInput:String, tfTarget: TextField, objParams: Object = null): void {			if (this.ready) {				this.tfTarget = tfTarget;				this.tfTarget.text = "";				this.arrChar = [];				this.arrChar = strInput.split("");				this.numCharAdded = 0;				if (objParams == null) objParams = {};				this.stepCharAdded = (objParams.stepCharAdded != null) ? objParams.stepCharAdded : 1;				this.isFramesSeconds = (objParams.stepCharAdded != null) ? objParams.isFramesSeconds : 0;				var intervalAppend: uint = (objParams.intervalAppend != null) ? objParams.intervalAppend : 30;				this.onStopAppendText = objParams.onStopAppendText;				if (this.isFramesSeconds == 0) this.addEventListener(Event.ENTER_FRAME, this.onAppendText);				else if (this.isFramesSeconds == 1) {					this.timerAppendText = new Timer(intervalAppend, this.arrChar.length);					this.timerAppendText.addEventListener(TimerEvent.TIMER, this.onAppendText);					this.timerAppendText.addEventListener(TimerEvent.TIMER_COMPLETE, this.onStopAppendTextDefault);					this.timerAppendText.start();				}				this.ready = false;			}		}				private function onAppendText(e: Event): void {			for (var i:uint = 0; i < this.stepCharAdded; i++) if (this.numCharAdded < this.arrChar.length) this.tfTarget.appendText(this.arrChar[this.numCharAdded++]);			if ((this.isFramesSeconds == 0) && (this.numCharAdded == this.arrChar.length)) {				this.removeEventListener(Event.ENTER_FRAME, this.onAppendText);				this.onStopAppendTextDefault();			}		}				private function onStopAppendTextDefault(e: TimerEvent = null): void {			this.ready = true;			if (this.onStopAppendText != null) this.onStopAppendText.apply();		}    }}